version: "3.8"
services:
  mysql:
    image: mysql:8.0.23
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=dev
      - MYSQL_PASSWORD=dev
    ports:
      - 3306:3306
    volumes:
      - "mysql_data:/var/lib/mysql"

  mongodb:
    image: mongo:4.4.1
    ports:
      - 27017:27017
    volumes:
      - "mongodb_data:/data/db"
    command: [ "mongod", "--replSet", "dev", "--setParameter", "notablescan=1" ]

  zookeeper:
    image: zookeeper:3.5.9
    ports:
      - 2181:2181
    environment:
      - JMXDISABLE=true
      - ZOO_DATA_DIR=/data
      - ZOO_DATA_LOG_DIR=/datalog
      - ZOO_ADMINSERVER_ENABLED=false
    volumes:
      - "zookeeper_data:/data"
      - "zookeeper_log_data:/datalog"

  kafka:
    image: neowu/kafka:2.8.0
    ports:
      - 9092:9092
    environment:
      - KAFKA_ARGS=--override advertised.listeners=PLAINTEXT://localhost:9092 --override num.partitions=3
    volumes:
      - "kafka_data:/data"
    depends_on:
      - zookeeper

  redis:
    image: redis
    ports:
      - 6379:6379
    volumes:
      - "./local_env/redis/redis.conf:/etc/redis/redis.conf"

#  nginx:
#    image: nginx
#    ports:
#      - 80:80
#      - 443:443
#    volumes:
#      - "./local_env/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf"
#      - "./local_env/nginx/nginx.conf:/etc/nginx/nginx.conf"
#      - "./local_env/nginx/nginx.crt:/etc/nginx/nginx.crt"
#      - "./local_env/nginx/nginx.key:/etc/nginx/nginx.key"
#
#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.0
#    ports:
#      - 9200:9200
#    environment:
#      - cluster.name=es
#      - discovery.type=single-node
#      - ES_JAVA_OPTS=-Xms512m -Xmx512m
#
#  kibana:
#    image: docker.elastic.co/kibana/kibana-oss:7.10.0
#    ports:
#      - 5601:5601
#    environment:
#      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
#      - TELEMETRY_ENABLED=false
#    depends_on:
#      - elasticsearch

volumes:
  mysql_data:
  mongodb_data:
  zookeeper_data:
  zookeeper_log_data:
  kafka_data:
